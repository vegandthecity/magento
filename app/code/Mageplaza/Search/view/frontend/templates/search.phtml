<?php
/**
 * Mageplaza
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Mageplaza.com license that is
 * available through the world-wide-web at this URL:
 * https://www.mageplaza.com/LICENSE.txt
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category    Mageplaza
 * @package     Mageplaza_Search
 * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
 * @license     https://www.mageplaza.com/LICENSE.txt
 */

/** @var $block \Magento\Framework\View\Element\Template */

/** @var $helper \Mageplaza\Search\Helper\Data */
$helper = $this->helper(\Mageplaza\Search\Helper\Data::class);
if ($helper->isEnabled()) : ?>
    <?php if ($helper->getConfigGeneral('category/enable')) : ?>
        <div class="search-category" style="position:absolute; top: 0; right: 35px; width: 130px">
            <select id="mpsearch-category">
                <?php foreach ($helper->getCategoryTree() as $id => $name) : ?>
                    <option value="<?= /** @noEscape */ $id ?>"><?= /** @noEscape */ $name ?></option>
                <?php endforeach; ?>
            </select>
        </div>
    <?php endif; ?>
    <script src="<?= /** @noEscape */ $helper->getJsFileUrl() ?>"></script>
    <?php if ($helper->isEnableSuggestion()) : ?>
        <script src="<?= /** @noEscape */ $helper->getAdditionJsFileUrl() ?>"></script>
    <?php endif; ?>
    <script type="text/javascript">
        require([
            'jquery',
            'Magento_Catalog/js/price-utils',
            'mpDevbridgeAutocomplete'
        ], function ($, priceUtils) {
            "use strict";
            var baseUrl = '<?= /** @noEscape */ trim($block->getBaseUrl(), '/') . '/' ?>',
                baseImageUrl = '<?= /** @noEscape */ $helper->getMediaHelper()->getSearchMediaUrl() ?>',
                priceFormat = <?= /** @noEscape */ $helper->getPriceFormat() ?>,
                displayInfo = <?= /** @noEscape */ $helper->getDisplay() ?>;

            var categorySelect = $('#mpsearch-category'),
                searchInput = $('#search');

            if (categorySelect.length) {
                categorySelect.on('change', function () {
                    searchInput.focus();

                    if ($(this).val() === 0) {
                        $(this).removeAttr('name');
                    } else {
                        $(this).attr('name', 'cat');
                    }
                });
            }

            var correctProductUrl = function (urlKey, isImage) {
                if (urlKey.search('http') !== -1) {
                    return urlKey;
                }

                return ((typeof isImage !== 'undefined') ? baseImageUrl : baseUrl) + urlKey;
            };

            var searchVar = [];

            <?php if ($helper->isEnableSuggestion()) : ?>
            var sortBy = "<?= /** @noEscape */ $helper->getSortBy()?>";
            if (sortBy === 'new_products') {
                searchVar = mp_new_product_search;
            } else if (sortBy === 'most_viewed_products') {
                searchVar = mp_most_viewed_products;
            } else {
                searchVar = mp_bestsellers;
            }
            <?php endif; ?>

            searchVar = $.merge(searchVar, mp_products_search);

            searchInput.autocomplete({
                lookup: searchVar,
                lookupLimit: <?= /** @noEscape */ (int) $helper->getConfigGeneral('max_query_results') ?: 10; ?>,
                maxHeight: 2000,
                minChars: 0,
                lookupFilter: function (suggestion, query, queryLowerCase) {
                    /** Category search*/
                    if (categorySelect.length) {
                        var categoryId = categorySelect.val();
                        if (categoryId > 0 && ($.inArray(categoryId, suggestion.c) === -1)) {
                            return false;
                        }
                    }

                    /** Product Suggestion*/
                    if (query.length === 0) {
                        return suggestion.o !== 'product_search';
                    }
                    /** Product Search*/
                    return decodeEntities(suggestion.value.toLowerCase()).indexOf(queryLowerCase) !== -1;
                },
                onSelect: function (suggestion) {
                    window.location.href = correctProductUrl(suggestion.u);
                },
                formatResult: function (suggestion, currentValue) {
                    var html = '<a href="' + correctProductUrl(suggestion.u) + '">';

                    if ($.inArray('image', displayInfo) !== -1) {
                        html += '<div class="suggestion-left"><img class="img-responsive" src="' + correctProductUrl(suggestion.i, true) + '" alt="" /></div>';
                    }

                    html += '<div class="suggestion-right">';
                    html += '<div class="product-line product-name">' + suggestion.value + '</div>';

                    if ($.inArray('price', displayInfo) !== -1) {
                        html += '<div class="product-line product-price"><?= /** @noEscape */ __('Price: ') ?>' + priceUtils.formatPrice(suggestion.p, priceFormat) + '</div>';
                    }

                    if ($.inArray('description', displayInfo) !== -1 && suggestion.d && suggestion.d.replace('""', '')) {
                        html += '<div class="product-des"><p class="short-des">' + suggestion.d + '</p></div>';
                    }

                    html += '</div></a>';

                    return html;
                }
            });

            var decodeEntities = (function () {
                var element = document.createElement('div');

                function decodeHTMLEntities(str) {
                    if (str && typeof str === 'string') {
                        str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
                        str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
                        element.innerHTML = str;
                        str = element.textContent;
                        element.textContent = '';
                    }

                    return str;
                }

                return decodeHTMLEntities;
            })();
        });
    </script>
<?php endif; ?>
